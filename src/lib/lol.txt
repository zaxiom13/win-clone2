# Context Apprenticeship at the Bank of America Merrill Lynch. Simultaneously studying University course at BPP called “digital technology solutions” Capstone Project. 8000 word report. End point assessment. I used Java at work. I used a framework called cucumber. The field I work within is low latency forex trading. I am part of a team that creates and manages java backend services that work with internal trade and market data to create useful data feeds for analysing risk and finding advantage. I.Assessment Brief Overview 1.1 Learning Outcomes (LOs) - Demonstrate a systematic understanding of the main concepts, frameworks and processes that need to be considered when addressing an organisational project - Select and apply appropriate research and project management skills - Evaluate information from a range of sources to support critical analysis, evaluation and problem solving - Select examples of the defined Skills, Knowledge and Behaviours from the apprenticeship standard This module is assessed through the completion of a portfolio including two deliverables equivalent to 10,000 words: Project report: A piece of coursework which clearly shows attainment of the Synoptic Project Competence Outcomes and meets the learning outcomes of the module (8000 words) Professional Discussion: A presentation reflecting on the developmental process of the project and the professional skills, knowledge and behaviours developed through this (30 minutes) (2000 words equivalent) As the project forms the basis of end point assessment it should be designed in such a way that you can demonstrate the Knowledge, Skills and Behaviours of your specialism --- We will focus on the Project Report. Your capstone project must address the knowledge skills and behaviours of your specialism, Software engineering: This could be a project to design and develop a significant piece of software or a new software product prototype to achieve defined business objectives, for a defined user group or customer group, to meet the business need and applying appropriate levels of security. It will include significant project planning including estimations of both time and cost to proposed solutions, include technical and commercial aspects of the proposed solution. Suggested report structure: This section describes the different elements that make up a typical Final Report. It’s work noting that the specific contents will be driven by the type of project you undertake, and your specialism, but you should be presenting the justification and findings of the new knowledge you have created in your project. Title Page Preliminary chapters These provide and overview and set the scene, giving context to the rest of the report.6 Abstract summarises very briefly the problem tackled, the method adopted and the results obtained; it should be no more than half a page long. It should enable a reader to understand the report in brief. Maximum 300 words. Introduction - this should describe the operating context, ie: it will provide background information; the purpose and objectives of the project, identify the need for the present work and outline the contents of the following chapters. Do not assume that the reader has specialised knowledge of the area that you are describing and be sure to explain any technical terms that you use. Main Chapters These are often produced while work on the Project is progressing. A good way of discovering whether your writing is at the right level is to get somebody else on your course to read a sample chapter or two: they will have general background knowledge of the subject but will not be familiar with your special subject. Your project may be research based or more applied, the structure of your report will differ depending on your choice of project. Speak to your supervisor if you are unsure which category your project falls into. Background and literature review An in-depth investigation of the context and literature, and where appropriate, other similar products/related work Problem Analysis / Aims and Objectives specify the problem and what will be solved or created through your work. The literature review should lead to the problem by demonstrating what is missing in the literature. The aim is the end result, the objectives are the steps you go through to get there. Methods / Design: where appropriate, a clear description of the stages of the life cycle undertaken, a description of the use of tools (CASE tools) to support the development process and any ethical or data security concerns [see section on responsible research] and details of: Data gathering and analysis Experiments/tests Validation of results Implementation Testing and Known Problems The specifics of the above will depend on whether main purpose of the Project is to produce an ‘artefact’ of some kind (e.g. Machine learning model, software development, creation of a tool, etc) or If your project is more research focused and involves an investigative or implementation piece of work Results: A summary of your findings should be presented clearly and concisely. You will not be required to include and raw data or sensitive (personally or commercially) information. As in the method section this will depends on the type of project you are undertaking. Review of resulting artefact Developed outcome Results are often fairly descriptive, they include what you found/created, the interpretation and analysis come in the discussion.7 Discussion this is where you critically evaluate the work you have done and discuss where it meets the objectives and answers the research questions laid out at the beginning. You can compare your findings to those of other published works in the literature review, and make recommendations for future developments or enhancements (without underselling the work you have achieved here). Final Chapter Conclusions: should begin with a summary of the aim and objectives of the project and how well you’ve achieved them and lessons learnt during the course of the project. References: In Harvard style. Appendices: In general, any large amount of technical material which would interrupt the flow of the Report can be assigned to an appendix. Examples of the types of material that should be placed in separate appendices are: Requirements Specification (if applicable) - only include a sample of this in the main body of the Report, the bulk should be put in the appendix if it is too wordy Design Methodology material: only include a sample of this in the main body of the Report. If any design stage produces a large number of diagrams, tables, etc., they should be put in the appendix. Test data: only include a sample of this in the main body of the Report, the bulk should be put in the appendix (if applicable). User manual for software (if applicable). Glossary: explanation of any technical terms that you use. Self-assessment against criteria – simply copy and paste the assessment criteria from the end of this document and highlight the level to which you feel you have achieved each criteria (e.g. highlight text or change cell colour). Core themes embedded through the report Responsible Research Your report should thoroughly and explicitly address any ethical concerns. In addition to completing the employer approval form ahead of starting on your project you should also complete an ethics form. Critical Evaluation This is a very important part of your Project Report. The aim of the critical evaluation is that you adopt a detached view of your Project and give an objective evaluation of your work. You should evaluate all aspects of your work, including the rationale for any design/implementation decisions, an assessment of whether the aims of the Project, as stated in the Project Proposal Report, have been achieved. In particular you should look back and reflect on each of the main stages of the software development process: Requirements: Were they complete, i.e. were all aspects of the system’s behaviour described? Was anything missing? Were they too tightly linked to a particular design or implementation? Design: Were alternatives considered at each stage? Were the correct alternatives chosen? Were the right sets of use cases, scenarios, classes, etc. chosen? Implementation: Was the correct programming language chosen? Were the correct data structures and algorithms chosen for each class’ attributes and methods? Was it necessary to modify the classes that were produced as the result of the design? In the discussion you show critical evaluation though review of your plan and an explanation of any deviations from it. Critical evaluation of the literature is also essential, applying thoughout the report and not just in the literature review. Consider: How reliable or valid is the research? Is the research applicable to your work? What are the similarities and differences in the research environment? How does the research compare to other papers? When was it published, are the findings still valid in a more recent context? Do the authors acknowledge any limitations or suggest future developments. Report Layout Requirements The final report should be 1.5 line spaced. If possible submit the Final Report as a single document (incl appendices). All pages should be numbered consecutively Abstract: The abstract should be no longer than 300 words, and it can be single spaced. Acknowledgements (optional)9 The table of contents comes next. It should include the following items (where applicable): acknowledgements, list of figures, list of tables, contents, chapters, only the main numbered sections of each chapter, References and Appendices; The main text should be no longer than 8,000 words long. This word count does not include your references/bibliography or the appendices. The main chapters, starting with the ‘introduction’ and ending with the ‘conclusions’, should be numbered, given a title, e.g. ‘Chapter 1 Introduction’, and start on a new page; Each table and figure should be clearly labelled with a number and caption/title. References should be in Harvard style in alphabetical order by author. Do NOT separate out Web, book, journal references, simply put them all in alphabetical order of author. The appendices come last PLEASE NOTE: You should self-assess against the assessment criteria (at the end of this document) before submission to ensure you are passing all necessary criteria. Criteria for excellence: Outstanding presentation of the problem situation giving the reader exceptional clarity of the issue to be addressed, the aims and the context in which the project sits leaving the reader with no doubts or questions regarding the issue bring addressed. Outstanding evidence of an innovative and original use of the literature which has been thoroughly critically evaluated. Evidence of deep and wide engagement with the literature which permeates the whole report giving the reader an exceptional understanding of the situating of this project within the current research sphere Outstanding description of the method(s) chosen with exceptional clarity. Alternative options explored are stated with reasons as to why the chosen method(s) were most appropriate. Uses the literature to present and support the chosen method(s). Project risks and their mitigation are fully discussed. Outstanding data analysis that is complete and free from errors with application of methods that will be insightful and original Outstanding reporting and presentation of results at publishable level. Exceptional clarity as to how the results relate back to original research aims/ purpose. Outstanding with precise, full and appropriate references and notes at publishing standard. with precise, full and appropriate references and notes at publishing standard. Outstanding undertaking of complex project with performance at an exceptional level ## Task: Create a Capstone Project Report ### Input - The final report should be based on a capstone project that addresses the knowledge, skills, and behaviors of the software engineering field. The project could be to design and develop a significant piece of software or a new software product prototype that meets defined business objectives and applies appropriate levels of security. ### Output - A report in markdown format that includes the following sections: - Title page - Preliminary chapters that give context to the report - Abstract that summarizes the problem, method, and results - Introduction that provides background information, purpose and objectives of the project, identifies the need for the project, and outlines contents of the following chapters - Main chapters that include: - Background and literature review that investigates the context and literature, and where appropriate, other similar products/related work - Problem analysis/aims and objectives that specify the problem and what will be solved or created through the work - Methods/design that includes a clear description of the stages of the life cycle undertaken, a description of the use of tools to support the development process, and details of data gathering and analysis, experiments/tests, validation of results, implementation, testing, and known problems - Results that summarize the findings clearly and concisely - Review of resulting artifact that evaluates the artifact - Developed outcome that presents the results and analysis - Discussion that critically evaluates the work, compares findings to those of other published works in the literature review, and makes recommendations for future developments or enhancements - Final chapter conclusions that summarize the aim and objectives of the project and how well they were achieved, and lessons learned during the course of the project - References in Harvard style - Appendices that include large amounts of technical material, requirements specification, design methodology material, test data, user manual for software, and glossary - Self-assessment against criteria - Core themes embedded throughout the report, such as responsible research and critical evaluation - The report should be 1.5 line spaced and no longer than 8,000 words long (not including references/bibliography or appendices) - The report should be self-assessed against the assessment criteria for excellence before submission to ensure passing all necessary criteria ### Constraints - Use markdown format - Replace the <insert-here/> tag in the document with the output - The input is based on the software engineering field, which must be considered when creating the report - Do not include any discussion within the markdown tags except for the required sections of the report - The report must be based on a capstone project - The report should be no longer than 8,000 words long (not including references/bibliography or appendices) - The report should be self-assessed against the assessment criteria for excellence before submission to ensure passing all necessary criteria - ### Excellence Criteria - Outstanding presentation of the problem situation, aims, and context - Outstanding evidence of an innovative and original use of literature - Evidence of deep and wide engagement with literature throughout the report - Outstanding description of methods/design, including project risks and their mitigation - Outstanding data analysis that is complete, error-free, and insightful - Outstanding reporting and presentation of results at a publishable level - Outstanding with precise, full, and appropriate references and notes at publishing standard - Outstanding undertaking of complex project with performance at an exceptional level ### Knowledge, Skills, and Behaviors for Software Engineering - Knowledge: software design and architecture, programming languages, development methodologies, algorithms and data structures, software testing and quality assurance, security and privacy - Skills: programming, problem-solving, critical thinking, communication, teamwork, project management, software development lifecycle - Behaviors: attention to detail, adaptability, continuous learning, ethical and professional responsibility, leadership, time management#